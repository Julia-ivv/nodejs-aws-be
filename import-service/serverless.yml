service: import-service
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1

  environment:
    SQS_URL: ${cf:product-service-${self:provider.stage}.SQSQueueUrl}

  iamRoleStatements:
    - Effect: "Allow"
      Action: "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::julia-ivv-stall-import"
    - Effect: "Allow"
      Action: "s3:*"
      Resource:
        - "arn:aws:s3:::julia-ivv-stall-import/*"
    - Effect: Allow
      Action: "sqs:*"
      Resource:
        - "${cf:product-service-${self:provider.stage}.SQSQueueArn}"

resources:    
  Resources:
    GatewayResponseDefault400:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true
          authorizer:
            name: basicAuthorizer
            arn: "${cf:authorization-service-${self:provider.stage}.basicAuthorizerArn}"
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: julia-ivv-stall-import
          rules: 
            - prefix: uploaded/
          existing: true
