service: product-service
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1

  environment:
    SQS_URL:
      Ref: SQSQueue
    SNS_ARN: 
      Ref: SNSTopic

  iamRoleStatements:
    - Effect: "Allow"
      Action: "sns:*"
      Resource:
        Ref: SNSTopic

resources:    
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: julia-ivv@mail.ru
        Protocol: email
        TopicArn:
          Ref: SNSTopic
        FilterPolicy:
          priceType: 
            - expensive
    SNSSubscription2:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: julia_sji85@mail.ru
        Protocol: email
        TopicArn:
          Ref: SNSTopic
        FilterPolicy:
          priceType: 
            - inexpensive
  Outputs:
    SQSQueueUrl:
      Value:
        Ref: SQSQueue
    SQSQueueArn:
      Value:
        Fn::GetAtt: [ SQSQueue, Arn ]

plugins:  
  - serverless-dotenv-plugin
  - serverless-webpack

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true

functions:
  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          path: products
          method: get
  getProductsById:
    handler: handler.getProductsById
    events:
      - http:
          path: products/{productId}
          method: get
  postProduct:
    handler: handler.postProduct
    events:
      - http:
          path: products
          method: post
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - SQSQueue
              - Arn   

